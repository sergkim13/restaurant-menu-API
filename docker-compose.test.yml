version: '3.8'

services:
  restaurant_menu_app:
    container_name: restaurant_menu_app
    env_file:
      - .docker-test.env
    environment:
      DB_NAME: ${TEST_DB_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: >
      sh -c "
        alembic upgrade head &&
        SQLALCHEMY_SILENCE_UBER_WARNING=1 pytest -vv
      "
    networks:
      - test_network
    depends_on:
      test_postgres_db:
        condition: service_healthy
      test_redis_db:
        condition: service_healthy
  
  test_postgres_db:
    container_name: test_postgres_db
    image: postgres:15.1-alpine
    volumes:
      - test-db-data:/var/lib/postgresql/data/
    env_file:
      - .docker-test.env
    environment:
      POSTGRES_DB: ${TEST_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${TEST_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  test_redis_db:
      container_name: test_redis_db
      image: redis:latest
      expose:
        - 6379
      ports:
        - "6379:6379"
      networks:
        - test_network
      healthcheck:
        test: ["CMD-SHELL", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5
  
networks:
    test_network:
        name: test_network

volumes:
  test-db-data: