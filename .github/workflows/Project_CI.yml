name: project CI

on: push

jobs:

  container-job:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    services:
      postgres:
        image: postgres:15.1-alpine
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: 'Create env file'
      run: |
        touch .env
        echo DB_NAME=test >> .env
        echo TEST_DB_NAME=test >> .env
        echo DB_USER=test >> .env
        echo DB_PASS=test >> .env
        echo DB_HOST=localhost >> .env
        echo DB_PORT=5432 >> .env
        echo REDIS_HOST=redis >> .env
        echo REDIS_PORT=6379 >> .env
        echo REDIS_DB=1 >> .env
        echo REDIS_EXP=100 >> .env
    - uses: actions/setup-python@v3
    - run: pipx install poetry==1.2.2
    - run: make install
    - run: make migration
    - run: poetry run celery -A restaurant_menu_app.tasks.tasks_app:celery_app worker --loglevel=INFO
    - name: test & publish code coverage
      uses: paambaati/codeclimate-action@v2.7.4
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: make test-coverage
